{"version":3,"sources":["child.jsx","Line.jsx","Entrance.jsx","Data.jsx","Icons.jsx","BootstrapNav.jsx","Parent.jsx","App.js","serviceWorker.js","index.js"],"names":["Child","id","this","props","bs","row","col","visitingclass","visiting","path","value","Math","sign","power","round","abs","className","Component","Line","state","basestaion","movingnode","document","getElementById","linestyle","connect","setState","handoff","handoffstyle","node","nodeOff","getOffset","x","left","width","padding","margin","height","position","top","drawhandoff","display","style","div1","div2","color","thickness","off1","off2","x1","y1","x2","y2","length","sqrt","backgroundColor","lineHeight","transform","atan2","PI","opacity","el","rect","getBoundingClientRect","window","pageXOffset","pageYOffset","offsetWidth","offsetHeight","Entrance","dir","enter","entrancenode","result","offset","y","bg","arrowimg","getstyle","entrancestyle","entering","Plot","createPlotlyComponent","Plotly","carslist","handoffslist","powerlist","carcntlist","handcntlist","powercntlist","carcnt","handcnt","powercnt","init","Data","type","data","typename","extra","xlist","list","push","toFixed","useResizeHandler","marker","layout","autosize","title","showlegend","t","r","l","b","config","displayModeBar","Icons","BootstrapNav","Navbar","expand","variant","fixed","Brand","href","alt","src","Toggle","aria-controls","Collapse","Nav","Link","policy","handoffs","averagepower","running","bstation","Parent","grid","cars","entrances","arrowdir","carenter","newgrid","i","j","current","k","pathroad","initgrid","Dropdown","size","Menu","Item","onClick","handledrop","handleClick","map","key","uuidv4","car","e","clicked","innerHTML","clearInterval","intervalid","setInterval","console","log","newentrances","newE","random","updateenter","newcars","oldcars","cartoremove","carsingrid","totalpower","changedirection","carmovealongdir","checkBS","splice","indexOf","removecars","carmoving","move","min","max","orig","randnum","ceil","floor","dirs","dirtodelete","dirTwochoices","pOld","powerReceived","pNew","newBS","carRow","carCol","val","xdiff","ydiff","dist","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f2f085b3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Child.css\";\r\n\r\nexport default class Child extends Component {\r\n    render() {\r\n        let id =\r\n            this.props.bs >= 0\r\n                ? \"bs\" + this.props.bs\r\n                : \"r\" + this.props.row + \"c\" + this.props.col;\r\n\r\n        let visitingclass = this.props.visiting\r\n            ? \"visiting node-visited\"\r\n            : this.props.bs >= 0\r\n            ? \"bs\"\r\n            : this.props.path\r\n            ? \"path\"\r\n            : \"\";\r\n        let value = this.props.visiting\r\n            ? `${Math.sign(this.props.power) *\r\n                  Math.round(Math.abs(this.props.power))}`\r\n            : \"\";\r\n        return (\r\n            <div className={`node ${visitingclass}`} id={id}>\r\n                {value}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Line extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            row: this.props.row,\r\n            col: this.props.col,\r\n            basestaion: this.props.bs\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let row = this.state.row;\r\n        let col = this.state.col;\r\n        let basestaion = this.state.basestaion;\r\n        let movingnode = document.getElementById(`r${row}c${col}`);\r\n        let bs = document.getElementById(`bs${basestaion}`);\r\n        let linestyle = {};\r\n        if (movingnode !== null && bs !== null) {\r\n            // console.log(movingnode, bs);\r\n            linestyle = connect(bs, movingnode, \"#ffc952\", 5);\r\n            this.setState({ linestyle: linestyle });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let row = this.props.row;\r\n        let col = this.props.col;\r\n        let basestaion = this.props.bs;\r\n        let handoff = this.props.handoff;\r\n        let linestyle = this.state.linestyle;\r\n        let handoffstyle = {};\r\n        let movingnode = document.getElementById(`r${row}c${col}`);\r\n        let bs = document.getElementById(`bs${basestaion}`);\r\n        if (movingnode !== null && bs !== null) {\r\n            linestyle = connect(bs, movingnode, \"#ffc952\", 5);\r\n        }\r\n        if (handoff) {\r\n            // console.log(row, col);\r\n            handoffstyle = drawhandoff(movingnode);\r\n        } else {\r\n            handoffstyle = { display: \"none\" };\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div style={handoffstyle} className={\"handoff\"}></div>\r\n                <div style={linestyle}></div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction drawhandoff(node) {\r\n    var nodeOff = getOffset(node);\r\n    var x = nodeOff.left - 0.7 * nodeOff.width;\r\n    var y = nodeOff.top - 90;\r\n    // console.log(x, y);\r\n    let handoffstyle = {\r\n        padding: \"0px\",\r\n        margin: \"0px\",\r\n        width: \"80px\",\r\n        height: \"80px\",\r\n        position: \"absolute\",\r\n        top: y + \"px\",\r\n        left: x + \"px\"\r\n    };\r\n    return handoffstyle;\r\n}\r\n\r\nfunction connect(div1, div2, color, thickness) {\r\n    var off1 = getOffset(div1);\r\n    var off2 = getOffset(div2);\r\n    // bottom right\r\n    var x1 = off1.left + 0.5 * off1.width;\r\n    var y1 = off1.top + 0.5 * off1.height;\r\n    // top right\r\n    var x2 = off2.left + 0.5 * off2.width;\r\n    var y2 = off2.top + 0.5 * off2.height;\r\n    // distance\r\n    var length = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n    // center\r\n    var cx = (x1 + x2) / 2 - length / 2;\r\n    var cy = (y1 + y2) / 2 - thickness / 2;\r\n    // angle\r\n    var angle = Math.atan2(y1 - y2, x1 - x2) * (180 / Math.PI);\r\n    // make hr\r\n\r\n    let linestyle = {\r\n        padding: \"0px\",\r\n        margin: \"0px\",\r\n        height: thickness + \"px\",\r\n        backgroundColor: color,\r\n        lineHeight: \"1px\",\r\n        position: \"absolute\",\r\n        left: cx + \"px\",\r\n        top: cy + \"px\",\r\n        width: length + \"px\",\r\n        transform: \"rotate(\" + angle + \"deg)\",\r\n        opacity: 0.5\r\n    };\r\n\r\n    return linestyle;\r\n\r\n    // document.body.innerHTML += htmlLine;\r\n}\r\n\r\nfunction getOffset(el) {\r\n    var rect = el.getBoundingClientRect();\r\n    return {\r\n        left: rect.left + window.pageXOffset,\r\n        top: rect.top + window.pageYOffset,\r\n        width: rect.width || el.offsetWidth,\r\n        height: rect.height || el.offsetHeight\r\n    };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Entrance.css\";\r\n\r\nexport default class Entrance extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            row: this.props.row,\r\n            col: this.props.col,\r\n            dir: this.props.dir,\r\n            enter: this.props.enter\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let row = this.state.row;\r\n        let col = this.state.col;\r\n        let dir = this.state.dir;\r\n        let enter = this.state.enter;\r\n        let entrancenode = document.getElementById(`r${row}c${col}`);\r\n        if (entrancenode !== null) {\r\n            let result = getstyle(entrancenode, dir, enter);\r\n            this.setState({ style: result.style, arrowimg: result.arrowimg });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let entrancestyle = this.state.style;\r\n        let arrowimg = this.state.arrowimg;\r\n        let entering =\r\n            this.state.enter === 0\r\n                ? \"entering\"\r\n                : this.state.enter === 1\r\n                ? \"leaving\"\r\n                : \"\";\r\n        // console.log(this.state.enter);\r\n        // console.log(entrancestyle);\r\n        return (\r\n            <div\r\n                style={entrancestyle}\r\n                className={`${arrowimg} ${entering} arrowsize`}\r\n            ></div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction getstyle(node, dir, enter) {\r\n    let offset = getOffset(node);\r\n    var x = 0;\r\n    var y = 0;\r\n    var bg = \"\";\r\n\r\n    if (dir === 1) {\r\n        x = offset.left - 85;\r\n        y = offset.top - 25;\r\n        bg = `arrow${dir}`;\r\n    } else if (dir === 0) {\r\n        x = offset.left - 25;\r\n        y = offset.top + 35;\r\n        bg = `arrow${dir}`;\r\n    } else if (dir === 2) {\r\n        x = offset.left - 25;\r\n        y = offset.top - 85;\r\n        bg = `arrow${dir}`;\r\n    } else if (dir === 3) {\r\n        x = offset.left + 35;\r\n        y = offset.top - 25;\r\n        bg = `arrow${dir}`;\r\n    }\r\n\r\n    let style = {\r\n        padding: \"0px\",\r\n        margin: \"0px\",\r\n        position: \"absolute\",\r\n        top: y + \"px\",\r\n        left: x + \"px\"\r\n    };\r\n\r\n    return {\r\n        style: style,\r\n        arrowimg: bg\r\n    };\r\n}\r\n\r\nfunction getOffset(el) {\r\n    var rect = el.getBoundingClientRect();\r\n    return {\r\n        left: rect.left + window.pageXOffset,\r\n        top: rect.top + window.pageYOffset,\r\n        width: rect.width || el.offsetWidth,\r\n        height: rect.height || el.offsetHeight\r\n    };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport createPlotlyComponent from \"react-plotly.js/factory\";\r\nimport Plotly from \"plotly.js/dist/plotly-cartesian\";\r\nimport \"./Data.css\";\r\n\r\nconst Plot = createPlotlyComponent(Plotly);\r\nlet carslist = [];\r\nlet handoffslist = [];\r\nlet powerlist = [];\r\nlet carcntlist = [];\r\nlet handcntlist = [];\r\nlet powercntlist = [];\r\nlet carcnt = 0;\r\nlet handcnt = 0;\r\nlet powercnt = 0;\r\nlet init = 0;\r\n\r\nexport default class Data extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        let type = this.props.type;\r\n        let data = this.props.data;\r\n        let typename = \"\";\r\n        let extra = \"\";\r\n        let xlist = [];\r\n        let list = [];\r\n        if (type === \"cars\") {\r\n            typename = \"Cars\";\r\n            carslist.push(data);\r\n            carcntlist.push(carcnt);\r\n            carcnt++;\r\n            xlist = carcntlist;\r\n            list = carslist;\r\n            init = 4;\r\n        } else if (type === \"handoffs\") {\r\n            typename = \"Handoffs\";\r\n            handoffslist.push(data);\r\n            handcntlist.push(handcnt);\r\n            handcnt++;\r\n            xlist = handcntlist;\r\n            list = handoffslist;\r\n            init = 0;\r\n        } else if (type === \"power\") {\r\n            typename = \"Average Power\";\r\n            extra = \"dBm\";\r\n            data = data.toFixed(2);\r\n            powerlist.push(data);\r\n            powercntlist.push(powercnt);\r\n            powercnt++;\r\n            xlist = powercntlist;\r\n            list = powerlist;\r\n            init = -103;\r\n        }\r\n        // console.log(xlist, list);\r\n        return (\r\n            <div className=\"datacontainer\">\r\n                <div className=\"data\">\r\n                    <div className=\"word\">{typename}</div>\r\n                    <div className={type}>{`${data} ${extra}`}</div>\r\n                </div>\r\n                <div className=\"plotlycontainer\">\r\n                    <Plot\r\n                        style={{ width: \"100%\", height: \"100%\" }}\r\n                        useResizeHandler\r\n                        data={[\r\n                            {\r\n                                x: xlist,\r\n                                y: list,\r\n                                type: \"line\",\r\n                                marker: { color: \"#be3335\" }\r\n                            },\r\n                            { type: \"line\", x: [0], y: [init] }\r\n                        ]}\r\n                        layout={{\r\n                            autosize: true,\r\n                            title: typename,\r\n                            showlegend: false,\r\n                            margin: {\r\n                                t: 30,\r\n                                r: 20,\r\n                                l: 45,\r\n                                b: 20\r\n                            },\r\n                            useResizeHandler: true\r\n                        }}\r\n                        config={{ displayModeBar: false }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// function plot(type, list) {\r\n//     let title = \"\";\r\n\r\n//     if (type === \"Cars\") title = \"Number of Cars\";\r\n//     else if (type === \"Handoffs\") title = \"Number of Handoffs\";\r\n//     else if (type === \"Avg. Power\") {\r\n//         title = \"Average Power\";\r\n//         type = \"Power\";\r\n//     }\r\n//     window.Plotly.newPlot(\r\n//         type,\r\n//         [\r\n//             {\r\n//                 y: list,\r\n//                 type: \"line\"\r\n//             }\r\n//         ],\r\n//         {\r\n//             title: title,\r\n//             margin: {\r\n//                 t: 30,\r\n//                 r: 20,\r\n//                 l: 45,\r\n//                 b: 20\r\n//             }\r\n//         }\r\n//     );\r\n\r\n//     if (type === \"Power\") {\r\n//         cnt++;\r\n//         if (cnt > 12) {\r\n//             window.Plotly.relayout(type, {\r\n//                 xaxis: {\r\n//                     range: [cnt - 10, cnt]\r\n//                 }\r\n//             });\r\n//         }\r\n//     }\r\n// }\r\n","import React, { Component } from \"react\";\r\nimport \"./Icons.css\";\r\n\r\nexport default class Icons extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"icons-description\">\r\n                <div className=\"icon-row\">\r\n                    <div className=\"ms first\">-103</div>\r\n                    <div className=\"legend second\">MS, Car (Power)</div>\r\n                </div>\r\n                <div className=\"icon-row\">\r\n                    <div className=\"bs first\"></div>\r\n                    <div className=\"legend second\">BS, Base station</div>\r\n                </div>\r\n                <div className=\"icon-row\">\r\n                    <div className=\"transmission first\"></div>\r\n                    <div className=\"legend second\">Servicing</div>\r\n                </div>\r\n                <div className=\"icon-row\">\r\n                    <div className=\"path first\"></div>\r\n                    <div className=\"legend second\">MS Path</div>\r\n                </div>\r\n                <div className=\"icon-row\">\r\n                    <div className=\"block first\"></div>\r\n                    <div className=\"legend second\">Block</div>\r\n                </div>\r\n                <div className=\"icon-row\">\r\n                    <div className=\"handoff first\"></div>\r\n                    <div className=\"legend second\">Handoff Made</div>\r\n                </div>\r\n                <div className=\"icon-row\">\r\n                    <div className=\"entrancee first\"></div>\r\n                    <div>\r\n                        <div className=\"legend second\">MS Entrance</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"third\">(Cars can only enter or leave here)</div>\r\n                <div className=\"icon-row\">\r\n                    <div className=\"enteringg first\"></div>\r\n                    <div className=\"legend second\">Car Entering</div>\r\n                </div>\r\n                <div className=\"icon-row\">\r\n                    <div className=\"leavingg first\"></div>\r\n                    <div className=\"legend second\">Car leaving</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/* black arrow\r\ngreen arrow\r\nred arrow\r\n\r\nmake img with ppt */\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport \"./BootstrapNav.css\";\r\n\r\nexport default class BootstrapNav extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar\r\n                    bg=\"dark\"\r\n                    expand=\"md\"\r\n                    variant=\"dark\"\r\n                    fixed=\"top\"\r\n                    className=\"navbrand\"\r\n                >\r\n                    <Navbar.Brand href=\"#home\">\r\n                        <img\r\n                            alt=\"\"\r\n                            src=\"./bs.png\"\r\n                            width=\"35\"\r\n                            height=\"35\"\r\n                            className=\"d-inline-block align-top\"\r\n                            id=\"logo\"\r\n                        />{\" \"}\r\n                        Wireless Network Handoff Visualizer\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                            <Nav.Link\r\n                                href=\"https://github.com/chonyy/handoff-visualizer/blob/master/README.md\"\r\n                                className=\"navbarlinks\"\r\n                            >\r\n                                Docs\r\n                            </Nav.Link>\r\n                            <Nav.Link\r\n                                href=\"https://github.com/chonyy/handoff-visualizer\"\r\n                                className=\"navbarlinks\"\r\n                            >\r\n                                Source\r\n                            </Nav.Link>\r\n                            <Nav.Link\r\n                                href=\"https://github.com/chonyy\"\r\n                                className=\"navbarlinks\"\r\n                            >\r\n                                Creator\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Child from \"./child\";\r\nimport uuidv4 from \"uuid/v4\";\r\nimport Line from \"./Line\";\r\nimport Entrance from \"./Entrance\";\r\nimport Data from \"./Data\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Icons from \"./Icons\";\r\nimport BootstrapNav from \"./BootstrapNav\";\r\nimport \"./Parent.css\";\r\n\r\nconst p = 0.0163911909;\r\nconst e = 5;\r\nconst t = -108;\r\nconst pMin = -112;\r\nlet policy = 0;\r\nlet handoffs = 0;\r\nlet averagepower = -103;\r\nlet running = 0;\r\n\r\nconst bstation = [\r\n    {\r\n        row: 5,\r\n        col: 7\r\n    },\r\n    {\r\n        row: 5,\r\n        col: 21\r\n    },\r\n    {\r\n        row: 15,\r\n        col: 7\r\n    },\r\n    {\r\n        row: 15,\r\n        col: 21\r\n    }\r\n];\r\n\r\nexport default class Parent extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            grid: [],\r\n            cars: [\r\n                //0:top, 1:right, 2:down, 3:left\r\n                {\r\n                    row: 5,\r\n                    col: 0,\r\n                    dir: 1,\r\n                    bs: 0,\r\n                    power: power(5, 0, bstation[0]),\r\n                    handoff: false\r\n                },\r\n                {\r\n                    row: 5,\r\n                    col: 28,\r\n                    dir: 3,\r\n                    bs: 1,\r\n                    power: power(5, 28, bstation[1]),\r\n                    handoff: false\r\n                },\r\n                {\r\n                    row: 15,\r\n                    col: 0,\r\n                    dir: 1,\r\n                    bs: 2,\r\n                    power: power(15, 0, bstation[2]),\r\n                    handoff: false\r\n                },\r\n                {\r\n                    row: 15,\r\n                    col: 28,\r\n                    dir: 3,\r\n                    bs: 3,\r\n                    power: power(15, 28, bstation[3]),\r\n                    handoff: false\r\n                }\r\n            ],\r\n            entrances: [\r\n                {\r\n                    row: 0,\r\n                    col: 7,\r\n                    arrowdir: 2,\r\n                    carenter: -1\r\n                },\r\n                {\r\n                    row: 0,\r\n                    col: 21,\r\n                    arrowdir: 2,\r\n                    carenter: -1\r\n                },\r\n                {\r\n                    row: 20,\r\n                    col: 7,\r\n                    arrowdir: 0,\r\n                    carenter: -1\r\n                },\r\n                {\r\n                    row: 20,\r\n                    col: 21,\r\n                    arrowdir: 0,\r\n                    carenter: -1\r\n                },\r\n                {\r\n                    row: 5,\r\n                    col: 28,\r\n                    arrowdir: 3,\r\n                    carenter: -1\r\n                },\r\n                {\r\n                    row: 15,\r\n                    col: 28,\r\n                    arrowdir: 3,\r\n                    carenter: -1\r\n                },\r\n                {\r\n                    row: 5,\r\n                    col: 0,\r\n                    arrowdir: 1,\r\n                    carenter: -1\r\n                },\r\n                {\r\n                    row: 15,\r\n                    col: 0,\r\n                    arrowdir: 1,\r\n                    carenter: -1\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let newgrid = initgrid(this.state.cars);\r\n\r\n        this.setState({ grid: newgrid });\r\n        let grid = this.state.grid;\r\n        let cars = this.state.cars;\r\n        let entrances = this.state.entrances;\r\n        return (\r\n            <div className=\"maincontent\">\r\n                <div className=\"descontainer\">\r\n                    <div className=\"description\">\r\n                        <div className=\"goalcontainer\">\r\n                            <div className=\"intro goal\">Goal</div>\r\n                            <div className=\"intro intropower\">\r\n                                Least Handoffs\r\n                            </div>\r\n                            <div className=\"intro introhandoffs\">\r\n                                Highest Power\r\n                            </div>\r\n                        </div>\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle\r\n                                size=\"lg\"\r\n                                variant=\"success\"\r\n                                id=\"dropdown-basic\"\r\n                            >\r\n                                Best Policy\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item\r\n                                    onClick={() => this.handledrop(0)}\r\n                                    id=\"dropdownitem\"\r\n                                >\r\n                                    Best Policy\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item\r\n                                    onClick={() => this.handledrop(1)}\r\n                                >\r\n                                    Threshold Policy\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item\r\n                                    onClick={() => this.handledrop(2)}\r\n                                >\r\n                                    Entrophy Policy\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item\r\n                                    onClick={() => this.handledrop(3)}\r\n                                >\r\n                                    Minimum Policy\r\n                                </Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        <div\r\n                            className=\"button\"\r\n                            onClick={() => this.handleClick()}\r\n                        >\r\n                            <div>Visualize</div>\r\n                        </div>\r\n                        <Icons></Icons>\r\n                    </div>\r\n                </div>\r\n                <div className=\"simcontainer\">\r\n                    <div className=\"simulation\">\r\n                        <div className=\"board\">\r\n                            {grid.map(row => {\r\n                                return (\r\n                                    <div key={uuidv4()} className=\"roww\">\r\n                                        {row.map(node => {\r\n                                            // console.log(node);\r\n                                            return (\r\n                                                <Child\r\n                                                    key={uuidv4()}\r\n                                                    row={node.row}\r\n                                                    col={node.col}\r\n                                                    visiting={node.visiting}\r\n                                                    path={node.path}\r\n                                                    bs={node.bs}\r\n                                                    power={node.power}\r\n                                                    handoff={node.handoff}\r\n                                                ></Child>\r\n                                            );\r\n                                        })}\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <div>\r\n                            {cars.map(car => {\r\n                                return (\r\n                                    <Line\r\n                                        key={uuidv4()}\r\n                                        row={car.row}\r\n                                        col={car.col}\r\n                                        bs={car.bs}\r\n                                        handoff={car.handoff}\r\n                                    ></Line>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <div>\r\n                            {entrances.map(e => {\r\n                                let entering = -1;\r\n                                if (e.carenter === 0) entering = 0;\r\n                                else if (e.carenter === 1) entering = 1;\r\n                                e.carenter = -1;\r\n                                return (\r\n                                    <Entrance\r\n                                        key={uuidv4()}\r\n                                        row={e.row}\r\n                                        col={e.col}\r\n                                        dir={e.arrowdir}\r\n                                        enter={entering}\r\n                                    ></Entrance>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"datacontainer\">\r\n                    <div className=\"datas\">\r\n                        <Data type={\"cars\"} data={cars.length}></Data>\r\n                        <Data type={\"handoffs\"} data={handoffs}></Data>\r\n                        <Data type={\"power\"} data={averagepower}></Data>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handledrop(clicked) {\r\n        if (clicked === 0) {\r\n            document.getElementById(\"dropdown-basic\").innerHTML = \"Best Policy\";\r\n            policy = 0;\r\n        } else if (clicked === 1) {\r\n            document.getElementById(\"dropdown-basic\").innerHTML =\r\n                \"Threshsold Policy\";\r\n            policy = 1;\r\n        } else if (clicked === 2) {\r\n            document.getElementById(\"dropdown-basic\").innerHTML =\r\n                \"Entrophy Policy\";\r\n            policy = 2;\r\n        } else if (clicked === 3) {\r\n            document.getElementById(\"dropdown-basic\").innerHTML =\r\n                \"Minimum Policy\";\r\n            policy = 3;\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n        if (running === 1) {\r\n            running = 0;\r\n            clearInterval(window.intervalid);\r\n        } else {\r\n            running = 1;\r\n            window.intervalid = setInterval(() => {\r\n                console.log(running);\r\n                let newentrances = updateenter(\r\n                    this.state.entrances,\r\n                    this.state.cars\r\n                );\r\n                let newcars = carmoving(this.state.entrances, this.state.cars);\r\n                let newgrid = move(this.state.cars);\r\n                this.setState({\r\n                    grid: newgrid,\r\n                    cars: newcars,\r\n                    entrances: newentrances\r\n                });\r\n            }, 600);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let grid = this.state.grid;\r\n        let cars = this.state.cars;\r\n        let entrances = this.state.entrances;\r\n        return (\r\n            <div>\r\n                <BootstrapNav></BootstrapNav>\r\n                <div className=\"maincontent\">\r\n                    <div className=\"descontainer\">\r\n                        <div className=\"description\">\r\n                            <div className=\"goalcontainer\">\r\n                                <div className=\"intro goal\">Goal</div>\r\n                                <div className=\"intro intropower\">\r\n                                    Least Handoffs\r\n                                </div>\r\n                                <div className=\"intro introhandoffs\">\r\n                                    Highest Power\r\n                                </div>\r\n                            </div>\r\n                            <Dropdown>\r\n                                <Dropdown.Toggle\r\n                                    size=\"lg\"\r\n                                    variant=\"success\"\r\n                                    id=\"dropdown-basic\"\r\n                                >\r\n                                    Best Policy\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item\r\n                                        onClick={() => this.handledrop(0)}\r\n                                    >\r\n                                        Best Policy\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item\r\n                                        onClick={() => this.handledrop(1)}\r\n                                    >\r\n                                        Threshold Policy\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item\r\n                                        onClick={() => this.handledrop(2)}\r\n                                    >\r\n                                        Entrophy Policy\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item\r\n                                        onClick={() => this.handledrop(3)}\r\n                                    >\r\n                                        Minimum Policy\r\n                                    </Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                            <div\r\n                                className=\"button\"\r\n                                onClick={() => this.handleClick()}\r\n                            >\r\n                                <div>Visualize</div>\r\n                            </div>\r\n                            <Icons></Icons>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"simcontainer\">\r\n                        <div className=\"simulation\">\r\n                            <div className=\"board\">\r\n                                {grid.map(row => {\r\n                                    return (\r\n                                        <div key={uuidv4()} className=\"roww\">\r\n                                            {row.map(node => {\r\n                                                // console.log(node);\r\n                                                return (\r\n                                                    <Child\r\n                                                        key={uuidv4()}\r\n                                                        row={node.row}\r\n                                                        col={node.col}\r\n                                                        visiting={node.visiting}\r\n                                                        path={node.path}\r\n                                                        bs={node.bs}\r\n                                                        power={node.power}\r\n                                                        handoff={node.handoff}\r\n                                                    ></Child>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            <div>\r\n                                {cars.map(car => {\r\n                                    return (\r\n                                        <Line\r\n                                            key={uuidv4()}\r\n                                            row={car.row}\r\n                                            col={car.col}\r\n                                            bs={car.bs}\r\n                                            handoff={car.handoff}\r\n                                        ></Line>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            <div>\r\n                                {entrances.map(e => {\r\n                                    let entering = -1;\r\n                                    if (e.carenter === 0) entering = 0;\r\n                                    else if (e.carenter === 1) entering = 1;\r\n                                    e.carenter = -1;\r\n                                    return (\r\n                                        <Entrance\r\n                                            key={uuidv4()}\r\n                                            row={e.row}\r\n                                            col={e.col}\r\n                                            dir={e.arrowdir}\r\n                                            enter={entering}\r\n                                        ></Entrance>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"datacontainer\">\r\n                        <div className=\"datas\">\r\n                            <Data type={\"cars\"} data={cars.length}></Data>\r\n                            <Data type={\"handoffs\"} data={handoffs}></Data>\r\n                            <Data type={\"power\"} data={averagepower}></Data>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction initgrid(cars) {\r\n    let newgrid = [];\r\n    for (let i = 0; i < 21; i++) {\r\n        let row = [];\r\n        for (let j = 0; j < 29; j++) {\r\n            let current = false;\r\n            let power = 0;\r\n            let handoff = false;\r\n            for (let k = 0; k < cars.length; k++) {\r\n                if (i === cars[k].row && j === cars[k].col) {\r\n                    current = true;\r\n                    power = cars[k].power;\r\n                    handoff = cars[k].handoff;\r\n                    break;\r\n                }\r\n            }\r\n            let bs = -1;\r\n            let pathroad = i % 5 === 0 || j % 7 === 0 ? true : false;\r\n            if (i === 5 && j === 7) bs = 0;\r\n            else if (i === 5 && j === 21) bs = 1;\r\n            else if (i === 15 && j === 7) bs = 2;\r\n            else if (i === 15 && j === 21) bs = 3;\r\n            row.push({\r\n                row: i,\r\n                col: j,\r\n                visiting: current,\r\n                path: pathroad,\r\n                bs: bs,\r\n                power: power,\r\n                handoff: handoff\r\n            });\r\n        }\r\n        newgrid.push(row);\r\n    }\r\n    return newgrid;\r\n}\r\n\r\nfunction move(cars) {\r\n    let newgrid = [];\r\n    for (let i = 0; i < 21; i++) {\r\n        let row = [];\r\n        for (let j = 0; j < 29; j++) {\r\n            let current = false;\r\n            let power = 0;\r\n            let handoff = false;\r\n            for (let k = 0; k < cars.length; k++) {\r\n                if (i === cars[k].row && j === cars[k].col) {\r\n                    current = true;\r\n                    power = cars[k].power;\r\n                    handoff = cars[k].handoff;\r\n                    break;\r\n                }\r\n            }\r\n            let bs = -1;\r\n            let pathroad = i % 5 === 0 || j % 7 === 0 ? true : false;\r\n            if (i === 5 && j === 7) bs = 0;\r\n            else if (i === 5 && j === 21) bs = 1;\r\n            else if (i === 15 && j === 7) bs = 2;\r\n            else if (i === 15 && j === 21) bs = 3;\r\n            row.push({\r\n                row: i,\r\n                col: j,\r\n                visiting: current,\r\n                path: pathroad,\r\n                bs: bs,\r\n                power: power,\r\n                handoff: handoff\r\n            });\r\n        }\r\n        newgrid.push(row);\r\n    }\r\n    return newgrid;\r\n}\r\n\r\nfunction carmoving(entrances, oldcars) {\r\n    let cars = [...oldcars];\r\n    let cartoremove = [];\r\n    let carsingrid = 0;\r\n    let totalpower = 0;\r\n    for (let i = 0; i < cars.length; i++) {\r\n        let car = cars[i];\r\n        if (car.row < 0 || car.row > 20 || car.col < 0 || car.col > 28)\r\n            cartoremove.push(car);\r\n        else {\r\n            if (car.row % 5 === 0 && car.col % 7 === 0) changedirection(car);\r\n            carmovealongdir(car);\r\n            checkBS(car);\r\n            carsingrid++;\r\n            totalpower += car.power;\r\n        }\r\n    }\r\n    averagepower = totalpower / carsingrid;\r\n    removecars(cars, cartoremove, entrances);\r\n    return cars;\r\n}\r\n\r\nfunction changedirection(car) {\r\n    let orig = car.dir;\r\n    let randnum = getRandomInt(0, 5);\r\n    // at corner\r\n    if (car.row % 20 === 0 && car.col % 28 === 0) {\r\n        if (car.row === 0 && car.col === 0) {\r\n            if (orig === 0) orig = 1;\r\n            else if (orig === 3) orig = 2;\r\n        } else if (car.row === 20 && car.col === 0) {\r\n            if (orig === 3) orig = 0;\r\n            else if (orig === 2) orig = 1;\r\n        } else if (car.row === 0 && car.col === 28) {\r\n            if (orig === 1) orig = 2;\r\n            else if (orig === 0) orig = 3;\r\n        } else if (car.row === 20 && car.col === 28) {\r\n            if (orig === 2) orig = 3;\r\n            else if (orig === 1) orig = 0;\r\n        }\r\n    }\r\n    // crossroad with two choices\r\n    else if (\r\n        (car.row === 0 && car.col === 14) ||\r\n        (car.row === 10 && car.col === 0) ||\r\n        (car.row === 10 && car.col === 28) ||\r\n        (car.row === 20 && car.col === 14)\r\n    ) {\r\n        let dirs = dirTwochoices(car.dir, car.row, car.col);\r\n        if (randnum <= 2) {\r\n            orig = dirs[0];\r\n        } else {\r\n            orig = dirs[1];\r\n        }\r\n    } else {\r\n        // turn left\r\n        if (randnum === 0) orig--;\r\n        // turn right\r\n        else if (randnum === 1 || randnum === 2) orig++;\r\n    }\r\n\r\n    if (orig === -1) orig = 3;\r\n    orig %= 4;\r\n    car.dir = orig;\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction removecars(cars, cartoremove, entrances) {\r\n    for (let i = 0; i < cartoremove.length; i++) {\r\n        let row = cartoremove[i].row;\r\n        let col = cartoremove[i].col;\r\n        console.log(row, col);\r\n        if (row === -1 && col === 7) entrances[0].carenter = 1;\r\n        else if (row === -1 && col === 21) entrances[1].carenter = 1;\r\n        else if (row === 21 && col === 7) entrances[2].carenter = 1;\r\n        else if (row === 21 && col === 21) entrances[3].carenter = 1;\r\n        else if (row === 5 && col === 29) entrances[4].carenter = 1;\r\n        else if (row === 15 && col === 29) entrances[5].carenter = 1;\r\n        else if (row === 5 && col === -1) entrances[6].carenter = 1;\r\n        else if (row === 15 && col === -1) entrances[7].carenter = 1;\r\n\r\n        cars.splice(cars.indexOf(cartoremove[i]), 1);\r\n    }\r\n}\r\n\r\nfunction carmovealongdir(car) {\r\n    if (car.dir === 2) {\r\n        car.row++;\r\n    } else if (car.dir === 0) {\r\n        car.row--;\r\n    } else if (car.dir === 1) {\r\n        car.col++;\r\n    } else if (car.dir === 3) {\r\n        car.col--;\r\n    }\r\n}\r\n\r\nfunction checkBS(car) {\r\n    let handoff = false;\r\n    let pOld = power(car.row, car.col, bstation[car.bs]);\r\n    let powerReceived = [];\r\n    powerReceived.push(power(car.row, car.col, bstation[0]));\r\n    powerReceived.push(power(car.row, car.col, bstation[1]));\r\n    powerReceived.push(power(car.row, car.col, bstation[2]));\r\n    powerReceived.push(power(car.row, car.col, bstation[3]));\r\n\r\n    let pNew = Math.max(...powerReceived);\r\n    let newBS = powerReceived.indexOf(pNew);\r\n\r\n    if (policy === 0) {\r\n        if (pNew > pOld) {\r\n            car.bs = newBS;\r\n            car.power = pNew;\r\n            handoff = true;\r\n            console.log(\"best\");\r\n        }\r\n    } else if (policy === 1) {\r\n        if (pNew > pOld && pOld < t) {\r\n            console.log(\"new\", pNew);\r\n            console.log(\"old\", pOld);\r\n            car.bs = newBS;\r\n            car.power = pNew;\r\n            handoff = true;\r\n            console.log(\"threshold\");\r\n        }\r\n    } else if (policy === 2) {\r\n        if (pNew > pOld + e) {\r\n            car.bs = newBS;\r\n            car.power = pNew;\r\n            handoff = true;\r\n            console.log(\"entrophy\");\r\n        }\r\n    } else if (policy === 3) {\r\n        if (pOld < pMin) {\r\n            car.bs = newBS;\r\n            car.power = pNew;\r\n            handoff = true;\r\n            console.log(\"minimum\");\r\n        }\r\n    }\r\n\r\n    if (handoff) {\r\n        handoffs++;\r\n        car.handoff = true;\r\n    }\r\n    //update power with original bs if no handoff\r\n    else {\r\n        car.power = pOld;\r\n        car.handoff = false;\r\n    }\r\n}\r\n\r\nfunction power(carRow, carCol, bs) {\r\n    let powerVal = 0;\r\n    let xdiff = Math.abs(carCol - bs.col) * 20;\r\n    let ydiff = Math.abs(carRow - bs.row) * 20;\r\n    let dist = (xdiff ** 2 + ydiff ** 2) ** (1 / 2);\r\n    if (dist === 0) {\r\n        powerVal = -50;\r\n    } else {\r\n        powerVal = -60 - 20 * log10(dist);\r\n    }\r\n    return powerVal;\r\n}\r\n\r\nfunction log10(val) {\r\n    return Math.log(val) / Math.log(10);\r\n}\r\n\r\nfunction dirTwochoices(dir, row, col) {\r\n    let dirs = [0, 1, 2, 3];\r\n    let dirtodelete = (dir + 2) % 4;\r\n\r\n    dirs.splice(dirs.indexOf(dirtodelete), 1);\r\n    if (row === 0 && col === 14) {\r\n        dirs.splice(dirs.indexOf(0), 1);\r\n    } else if (row === 10 && col === 0) {\r\n        dirs.splice(dirs.indexOf(3), 1);\r\n    } else if (row === 10 && col === 28) {\r\n        dirs.splice(dirs.indexOf(1), 1);\r\n    } else if (row === 20 && col === 14) {\r\n        dirs.splice(dirs.indexOf(2), 1);\r\n    }\r\n\r\n    return dirs;\r\n}\r\n\r\nfunction updateenter(entrances, cars) {\r\n    let newE = [...entrances];\r\n\r\n    for (let i = 0; i < 8; i++) {\r\n        let randnum = Math.random();\r\n        let enter = randnum < p;\r\n        if (enter) {\r\n            //top 2\r\n            if (i === 0) {\r\n                cars.push({\r\n                    row: 0,\r\n                    col: 7,\r\n                    dir: 2,\r\n                    bs: 0,\r\n                    power: power(0, 7, bstation[0])\r\n                });\r\n            } else if (i === 1) {\r\n                cars.push({\r\n                    row: 0,\r\n                    col: 21,\r\n                    dir: 2,\r\n                    bs: 1,\r\n                    power: power(0, 21, bstation[1])\r\n                });\r\n            }\r\n            //bottom 2\r\n            else if (i === 2) {\r\n                cars.push({\r\n                    row: 20,\r\n                    col: 7,\r\n                    dir: 0,\r\n                    bs: 2,\r\n                    power: power(20, 7, bstation[2])\r\n                });\r\n            } else if (i === 3) {\r\n                cars.push({\r\n                    row: 20,\r\n                    col: 21,\r\n                    dir: 0,\r\n                    bs: 3,\r\n                    power: power(20, 21, bstation[3])\r\n                });\r\n            }\r\n            //right 2\r\n            else if (i === 4) {\r\n                cars.push({\r\n                    row: 5,\r\n                    col: 28,\r\n                    dir: 3,\r\n                    bs: 1,\r\n                    power: power(5, 28, bstation[1])\r\n                });\r\n            } else if (i === 5) {\r\n                cars.push({\r\n                    row: 15,\r\n                    col: 28,\r\n                    dir: 3,\r\n                    bs: 3,\r\n                    power: power(15, 28, bstation[3])\r\n                });\r\n            }\r\n            //left 2\r\n            else if (i === 6) {\r\n                cars.push({\r\n                    row: 5,\r\n                    col: 0,\r\n                    dir: 2,\r\n                    bs: 0,\r\n                    power: power(5, 0, bstation[0])\r\n                });\r\n            } else if (i === 7) {\r\n                cars.push({\r\n                    row: 15,\r\n                    col: 0,\r\n                    dir: 2,\r\n                    bs: 2,\r\n                    power: power(15, 0, bstation[2])\r\n                });\r\n            }\r\n            // console.log(\"entering\", newE[i]);\r\n            newE[i].carenter = 0;\r\n        }\r\n    }\r\n\r\n    return newE;\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Parent from './Parent'\n\nfunction App() {\n    return (\n        <Parent />\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}